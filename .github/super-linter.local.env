# ANSIBLE_CONFIG_FILE 	.ansible-lint.yml 	Filename for Ansible-lint configuration (ex: .ansible-lint, .ansible-lint.yml)
# ANSIBLE_DIRECTORY 	/ansible 	Flag to set the root directory for Ansible file location(s), relative to DEFAULT_WORKSPACE. Set to . to use the top-level of the DEFAULT_WORKSPACE.
# BASH_EXEC_IGNORE_LIBRARIES 	false 	If set to true, shell files with a file extension and no shebang line are ignored when checking if the executable bit is set.
# BASH_FILE_NAME 	.shellcheckrc 	Filename for Shellcheck
# BASH_SEVERITY 	Shellcheck default severity 	Specify the minimum severity of errors to consider in shellcheck. Valid values in order of severity are error, warning, info and style.
# CHECKOV_FILE_NAME 	.checkov.yaml 	Configuration filename for Checkov.
# CLANG_FORMAT_FILE_NAME 	.clang-format 	Configuration filename for clang-format.
# CREATE_LOG_FILE 	false 	If set to true, it creates the log file. You can set the log filename using the LOG_FILE environment variable. This overrides any existing log files.
# CSS_FILE_NAME 	.stylelintrc.json 	Filename for Stylelint configuration (ex: .stylelintrc.yml, .stylelintrc.yaml)
# DEFAULT_BRANCH 	Default repository branch when running on GitHub Actions, master otherwise 	The name of the repository default branch. There's no need to configure this variable when running on GitHub Actions
DEFAULT_BRANCH=master
# DEFAULT_WORKSPACE 	/tmp/lint 	The location containing files to lint if you are running locally. Defaults to GITHUB_WORKSPACE when running in GitHub Actions. There's no need to configure this variable when running on GitHub Actions.
# DISABLE_ERRORS 	false 	Flag to have the linter complete with exit code 0 even if errors were detected.
# DOCKERFILE_HADOLINT_FILE_NAME 	.hadolint.yaml 	Filename for hadolint configuration (ex: .hadolintlintrc.yaml)
# EDITORCONFIG_FILE_NAME 	.editorconfig-checker.json 	Filename for editorconfig-checker configuration
# ENABLE_COMMITLINT_STRICT_MODE 	false 	If set to true, enables commitlint strict mode.
# ENABLE_GITHUB_ACTIONS_GROUP_TITLE 	false if RUN_LOCAL=true, true otherwise 	Flag to enable GitHub Actions log grouping.
# ENABLE_GITHUB_ACTIONS_STEP_SUMMARY 	false if RUN_LOCAL=true, true otherwise 	Flag to enable GitHub Actions job summary for the Super-linter action. For more information, see Summary outputs.
# ENFORCE_COMMITLINT_CONFIGURATION_CHECK 	false 	If set to true and VALIDATE_GIT_COMMITLINT is set to true, Super-linter exits with an error if there's no commitlint configuration file. Otherwise, Super-linter emits a warning and forcefully sets VALIDATE_GIT_COMMITLINT to false.
# FILTER_REGEX_EXCLUDE 	not set 	Regular expression defining which files will be excluded from linting (ex: .*src/test.*). Not setting this variable means to process all files. Jscpd and Checkov ignore this variable. Use their include and ignore features to select or ignore the files to lint.
# FILTER_REGEX_INCLUDE 	not set 	Regular expression defining which files will be processed by linters (ex: .*src/.*). Not setting this variable means to process all files. FILTER_REGEX_INCLUDE is evaluated before FILTER_REGEX_EXCLUDE. Jscpd and Checkov ignore this variable. Use their include and ignore features to select or ignore the files to lint.

##### Fix
# FIX_ANSIBLE	false 	Option to enable fix mode for ANSIBLE.
FIX_ANSIBLE=true
# FIX_CLANG_FORMAT 	false 	Option to enable fix mode for CLANG_FORMAT.
FIX_CLANG_FORMAT=true
# FIX_CSHARP 	false 	Option to enable fix mode for CSHARP.
FIX_CSHARP=true
# FIX_CSS 	false 	Option to enable fix mode for CSS.
FIX_CSS=true
# FIX_CSS_PRETTIER 	true 	Flag to enable or disable the formatting of CSS, Sass, and SCSS files with Prettier.
FIX_CSS_PRETTIER=true
# FIX_DOTNET_SLN_FORMAT_ANALYZERS 	false 	Option to enable or disable fix mode for Dotnet solutions.
FIX_DOTNET_SLN_FORMAT_ANALYZERS=true
# FIX_DOTNET_SLN_FORMAT_STYLE 	false 	Option to enable or disable fix mode for Dotnet solutions.
FIX_DOTNET_SLN_FORMAT_STYLE=true
# FIX_DOTNET_SLN_FORMAT_WHITESPACE 	true 	Option to enable or disable fix mode for Dotnet solutions.
FIX_DOTNET_SLN_FORMAT_WHITESPACE=true
# FIX_ENV 	false 	Option to enable fix mode for ENV.
FIX_ENV=true
# FIX_GO 	false 	Option to enable fix mode for GO.
FIX_GO=true
# FIX_GOOGLE_JAVA_FORMAT 	false 	Option to enable fix mode for GOOGLE_JAVA_FORMAT.
FIX_GOOGLE_JAVA_FORMAT=true
# FIX_GO_MODULES 	false 	Option to enable fix mode for GO_MODULES.
FIX_GO_MODULES=true
# FIX_GRAPHQL_PRETTIER 	true 	Flag to enable or disable the formatting of GraphQL files with Prettier.
FIX_GRAPHQL_PRETTIER=true
# FIX_GROOVY 	false 	Option to enable fix mode for GROOVY.
FIX_GROOVY=true
# FIX_HTML_PRETTIER 	true 	Flag to enable or disable the formatting of HTML files with Prettier.
FIX_HTML_PRETTIER=true
# FIX_JAVASCRIPT_ES 	false 	Option to enable fix mode for JAVASCRIPT_ES.
FIX_JAVASCRIPT_ES=true
# FIX_JAVASCRIPT_PRETTIER 	false 	Flag to enable or disable the formatting of JavaScript files with Prettier.
FIX_JAVASCRIPT_PRETTIER=true
# FIX_JAVASCRIPT_STANDARD 	false 	Option to enable fix mode for JAVASCRIPT_STANDARD.
FIX_JAVASCRIPT_STANDARD=true
# FIX_JSON 	false 	Option to enable fix mode for JSON.
FIX_JSON=true
# FIX_JSONC 	false 	Option to enable fix mode for JSONC.
FIX_JSONC=true
# FIX_JSONC_PRETTIER 	true 	Flag to enable or disable the formatting of JSONC and JSON5 files with Prettier.
FIX_JSONC_PRETTIER=true
# FIX_JSON_PRETTIER 	true 	Flag to enable or disable the formatting of JSON files with Prettier.
FIX_JSON_PRETTIER=true
# FIX_JSX 	false 	Option to enable fix mode for JSX.
FIX_JSX=true
# FIX_JSX_PRETTIER 	true 	Flag to enable or disable the formatting of JSX files with Prettier.
FIX_JSX_PRETTIER=true
# FIX_JUPYTER_NBQA_BLACK 	false 	Option to enable fix mode for NBQA_BLACK.
FIX_JUPYTER_NBQA_BLACK=true
# FIX_JUPYTER_NBQA_ISORT 	false 	Option to enable fix mode for NBQA_ISORT.
FIX_JUPYTER_NBQA_ISORT=true
# FIX_JUPYTER_NBQA_RUFF 	false 	Option to enable fix mode for NBQA_RUFF.
FIX_JUPYTER_NBQA_RUFF=true
# FIX_MARKDOWN 	false 	Option to enable fix mode for MARKDOWN.
FIX_MARKDOWN=true
# FIX_MARKDOWN_PRETTIER 	true 	Flag to enable or disable the formatting of Markdown files with Prettier.
FIX_MARKDOWN_PRETTIER=true
# FIX_POWERSHELL 	false 	Option to enable fix mode for POWERSHELL.
FIX_POWERSHELL=true
# FIX_PROTOBUF 	false 	Option to enable fix mode for PROTOBUF.
FIX_PROTOBUF=true
# FIX_PYTHON_BLACK 	false 	Option to enable fix mode for PYTHON_BLACK.
FIX_PYTHON_BLACK=true
# FIX_PYTHON_ISORT 	false 	Option to enable fix mode for PYTHON_ISORT.
FIX_PYTHON_ISORT=true
# FIX_PYTHON_PYINK 	false 	Option to enable fix mode for PYTHON_PYINK.
FIX_PYTHON_PYINK=true
# FIX_PYTHON_RUFF 	false 	Option to enable fix mode for PYTHON_RUFF.
FIX_PYTHON_RUFF=true
# FIX_RUBY 	false 	Option to enable fix mode for RUBY.
FIX_RUBY=true
# FIX_RUST_2015 	false 	Option to enable fix mode for RUST_2015.
FIX_RUST_2015=true
# FIX_RUST_2018 	false 	Option to enable fix mode for RUST_2018.
FIX_RUST_2018=true
# FIX_RUST_2021 	false 	Option to enable fix mode for RUST_2021.
FIX_RUST_2021=true
# FIX_RUST_CLIPPY 	false 	Option to enable fix mode for RUST_CLIPPY. When FIX_RUST_CLIPPY is true, Clippy is allowed to fix issues in the workspace even if there are unstaged and staged changes in the workspace.
FIX_RUST_CLIPPY=true
# FIX_SCALAFMT 	false 	Option to enable fix mode for SCALAFMT.
FIX_SCALAFMT=true
# FIX_SHELL_SHFMT 	false 	Option to enable fix mode for SHELL_SHFMT.
FIX_SHELL_SHFMT=true
# FIX_SNAKEMAKE_SNAKEFMT 	false 	Option to enable fix mode for SNAKEMAKE_SNAKEFMT.
FIX_SNAKEMAKE_SNAKEFMT=true
# FIX_SQLFLUFF 	false 	Option to enable fix mode for SQLFLUFF.
FIX_SQLFLUFF=true
# FIX_TERRAFORM_FMT 	false 	Option to enable fix mode for TERRAFORM_FMT.
FIX_TERRAFORM_FMT=true
# FIX_TSX 	false 	Option to enable fix mode for TSX.
FIX_TSX=true
# FIX_TYPESCRIPT_ES 	false 	Option to enable fix mode for TYPESCRIPT_ES.
FIX_TYPESCRIPT_ES=true
# FIX_TYPESCRIPT_PRETTIER 	false 	Flag to enable or disable the formatting of TypeScript files with Prettier.
FIX_TYPESCRIPT_PRETTIER=true
# FIX_TYPESCRIPT_STANDARD 	false 	Option to enable fix mode for TYPESCRIPT_STANDARD.
FIX_TYPESCRIPT_STANDARD=true
# FIX_VUE_PRETTIER 	true 	Flag to enable or disable the formatting of Vue files with Prettier.
FIX_VUE_PRETTIER=true
# FIX_YAML_PRETTIER 	true 	Flag to enable or disable the formatting of YAML files with Prettier.
FIX_YAML_PRETTIER=true
# GITHUB_ACTIONS_CONFIG_FILE 	actionlint.yml 	Filename for Actionlint configuration (ex: actionlint.yml)
# GITHUB_ACTIONS_COMMAND_ARGS 	null 	Additional arguments passed to actionlint command. Useful to ignore some errors
# GITHUB_CUSTOM_API_URL 	https://api.${GITHUB_DOMAIN} 	Specify a custom GitHub API URL in case GitHub Enterprise is used: e.g. https://github.myenterprise.com/api/v3
# GITHUB_CUSTOM_SERVER_URL 	https://${GITHUB_DOMAIN}" 	Specify a custom GitHub server URL. Useful for GitHub Enterprise instances.
# GITHUB_DOMAIN 	github.com 	Specify a custom GitHub domain in case GitHub Enterprise is used: e.g. github.myenterprise.com. GITHUB_DOMAIN is a convenience configuration variable to automatically build GITHUB_CUSTOM_API_URL and GITHUB_CUSTOM_SERVER_URL.
# GITLEAKS_CONFIG_FILE 	.gitleaks.toml 	Filename for GitLeaks configuration (ex: .gitleaks.toml)
# GITLEAKS_LOG_LEVEL 	Gitleaks default log level 	Gitleaks log level. Defaults to the Gitleaks default log level.
# GO_CONFIG_FILE 	.golangci.yml 	Filename for golangci-lint configuration (ex: .golangci.toml)
# GROOVY_FAILON_LEVEL 	warning 	npm-groovy-lint failon level.
# IGNORE_GENERATED_FILES 	false 	If set to true, super-linter will ignore all the files with @generated marker but without @not-generated marker. Jscpd and Checkov ignore this variable. Use their include and ignore features to select or ignore the files to lint.
# IGNORE_GITIGNORED_FILES 	false 	If set to true, super-linter will ignore all the files that are ignored by Git. Jscpd and Checkov ignore this variable. Use their include and ignore features to select or ignore the files to lint.
IGNORE_GITIGNORED_FILES=true
# JAVA_FILE_NAME 	sun_checks.xml 	Filename for Checkstyle configuration. Checkstyle embeds several configuration files, such as sun_checks.xml, google_checks.xml that you can use without providing your own configuration file.
# JAVASCRIPT_ES_CONFIG_FILE 	.eslintrc.yml 	Filename for ESLint configuration (ex: .eslintrc.yml, .eslintrc.json)
# JSCPD_CONFIG_FILE 	.jscpd.json 	Filename for JSCPD configuration
# JUPYTER_NBQA_CONFIG_FILE 	.jupyter-nbqa.toml 	Filename for nbqa configuration
# KUBERNETES_KUBECONFORM_OPTIONS 	null 	Additional arguments to pass to the command-line when running Kubernetes Kubeconform (Example: --ignore-missing-schemas)
# LINTER_RULES_PATH 	.github/linters 	Directory for all linter configuration rules.
# LOG_FILE 	super-linter.log 	The filename for outputting logs. Super-linter saves the log file to ${DEFAULT_WORKSPACE}/${LOG_FILE}.
# LOG_LEVEL 	INFO 	How much output the script will generate to the console. One of ERROR, WARN, NOTICE, INFO, or DEBUG.
LOG_LEVEL=DEBUG
# MARKDOWN_CONFIG_FILE 	.markdown-lint.yml 	Filename for Markdownlint configuration (ex: .markdown-lint.yml, .markdownlint.json, .markdownlint.yaml)
# MARKDOWN_CUSTOM_RULE_GLOBS 	not set 	Comma-separated list of file globs matching custom Markdownlint rule files.
# MULTI_STATUS 	true 	A status API is made for each language that is linted to make visual parsing easier.
# NATURAL_LANGUAGE_CONFIG_FILE 	.textlintrc 	Filename for textlint configuration (ex: .textlintrc)
# PERL_PERLCRITIC_OPTIONS 	null 	Additional arguments to pass to the command-line when running perlcritic (Example: --theme community)
# POWERSHELL_CONFIG_FILE 	.powershell-psscriptanalyzer.psd1 	Filename for PSScriptAnalyzer configuration
# PHP_CONFIG_FILE 	php.ini 	Filename for PHP Configuration (ex: php.ini)
# PHP_PHPCS_FILE_NAME 	phpcs.xml 	Filename for PHP CodeSniffer (ex: .phpcs.xml, .phpcs.xml.dist)
# PHP_PHPSTAN_CONFIG_FILE 	phpstan.neon 	Filename for PHPStan Configuration (ex: phpstan.neon)
# PROTOBUF_CONFIG_FILE 	.protolintrc.yml 	Filename for protolint configuration (ex: .protolintrc.yml)
# PYTHON_BLACK_CONFIG_FILE 	.python-black 	Filename for black configuration (ex: .isort.cfg, pyproject.toml)
# PYTHON_FLAKE8_CONFIG_FILE 	.flake8 	Filename for flake8 configuration (ex: .flake8, tox.ini)
# PYTHON_ISORT_CONFIG_FILE 	.isort.cfg 	Filename for isort configuration (ex: .isort.cfg, pyproject.toml)
# PYTHON_MYPY_CONFIG_FILE 	.mypy.ini 	Filename for mypy configuration (ex: .mypy.ini, setup.config)
# PYTHON_PYINK_CONFIG_FILE 	.python-pyink 	Filename for pyink configuration (ex: .isort.cfg, pyproject.toml)
# PYTHON_PYLINT_CONFIG_FILE 	.python-lint 	Filename for pylint configuration (ex: .python-lint, .pylintrc)
# PYTHON_RUFF_CONFIG_FILE 	.ruff.toml 	Filename for ruff configuration
# RENOVATE_SHAREABLE_CONFIG_PRESET_FILE_NAMES 	not set 	Comma-separated filenames for renovate shareable config preset (ex: default.json)
# REMOVE_ANSI_COLOR_CODES_FROM_OUTPUT 	false 	If set to true, Super-linter removes ANSI color codes from linters stdout and stderr files, and from the Super-linter log file.
# RUBY_CONFIG_FILE 	.ruby-lint.yml 	Filename for rubocop configuration (ex: .ruby-lint.yml, .rubocop.yml)
# RUN_LOCAL 	false 	Set this to true when running outside GitHub Actions or when you want to disable getting environment information from the GitHub Actions environment. For more information about running Super-linter outside GitHub Actions, see Run Super-Linter outside GitHub Actions.
RUN_LOCAL=true
# RUST_CLIPPY_COMMAND_OPTIONS 	not set 	Additional options and arguments to pass to the command when running Clippy.
# SAVE_SUPER_LINTER_OUTPUT 	false 	If set to true, Super-linter will save its output in the workspace. For more information, see Super-linter outputs.
SAVE_SUPER_LINTER_OUTPUT=true
SAVE_SUPER_LINTER_SUMMARY=true
# SAVE_SUPER_LINTER_SUMMARY 	false 	If set to true, Super-linter will save a summary. For more information, see Summary outputs.
# SCALAFMT_CONFIG_FILE 	.scalafmt.conf 	Filename for scalafmt configuration (ex: .scalafmt.conf)
# SNAKEMAKE_SNAKEFMT_CONFIG_FILE 	.snakefmt.toml 	Filename for Snakemake configuration (ex: pyproject.toml, .snakefmt.toml)
# SSL_CERT_SECRET 	none 	SSL cert to add to the Super-Linter trust store. This is needed for users on self-hosted runners or need to inject the cert for security standards (ex. ${{ secrets.SSL_CERT }})
# SSH_KEY 	none 	SSH key that has access to your private repositories
# SSH_SETUP_GITHUB 	false 	If set to true, adds the github.com SSH key to known_hosts. This is ignored if SSH_KEY is provided - i.e. the github.com SSH key is always added if SSH_KEY is provided
# SSH_INSECURE_NO_VERIFY_GITHUB_KEY 	false 	INSECURE - If set to true, does not verify the fingerprint of the github.com SSH key before adding this. This is not recommended!
# SQLFLUFF_CONFIG_FILE 	/.sqlfluff 	Filename for SQLFLUFF configuration (ex: /.sqlfluff, pyproject.toml)
# SUPER_LINTER_OUTPUT_DIRECTORY_NAME 	super-linter-output 	Name of the directory where super-linter saves its output.
# SUPER_LINTER_SUMMARY_FILE_NAME 	super-linter-summary.md 	Name of the file where to save the summary output. For more information, see Summary outputs.
# SUPPRESS_FILE_TYPE_WARN 	false 	If set to true, will hide warning messages about files without their proper extensions. Default is false
# SUPPRESS_POSSUM 	false 	If set to true, will hide the ASCII possum at top of log output. Default is false
# TERRAFORM_TERRASCAN_CONFIG_FILE 	terrascan.toml 	Filename for terrascan configuration (ex: terrascan.toml)
# TERRAFORM_TFLINT_CONFIG_FILE 	.tflint.hcl 	Filename for tfLint configuration (ex: .tflint.hcl)
# TYPESCRIPT_ES_CONFIG_FILE 	.eslintrc.yml 	Filename for ESLint configuration (ex: .eslintrc.yml, .eslintrc.json)
# TYPESCRIPT_STANDARD_TSCONFIG_FILE 	${DEFAULT_WORKSPACE}/tsconfig.json 	Path to the TypeScript project configuration in ts-standard. The path is relative to DEFAULT_WORKSPACE
# USE_FIND_ALGORITHM 	false 	By default, we use git diff to find all files in the workspace and what has been updated, this would enable the Linux find method instead to find all files to lint
# VALIDATE_ALL_CODEBASE 	true 	Will parse the entire repository and find all files to validate across all types. NOTE: When set tofalse, only new or edited files will be parsed for validation.
# VALIDATE_ANSIBLE 	true 	Flag to enable or disable the linting process of the Ansible language.
# VALIDATE_ARM 	true 	Flag to enable or disable the linting process of the ARM language.
# VALIDATE_BASH 	true 	Flag to enable or disable the linting process of the Bash language.
# VALIDATE_BASH_EXEC 	true 	Flag to enable or disable the linting process of the Bash language to validate if file is stored as executable.
# VALIDATE_CPP 	true 	Flag to enable or disable the linting process of the C++ language.
# VALIDATE_CHECKOV 	true 	Flag to enable or disable the linting process with Checkov
# VALIDATE_CLANG_FORMAT 	true 	Flag to enable or disable the linting process of the C++/C language with clang-format.
# VALIDATE_CLOJURE 	true 	Flag to enable or disable the linting process of the Clojure language.
# VALIDATE_CLOUDFORMATION 	true 	Flag to enable or disable the linting process of the AWS Cloud Formation language.
# VALIDATE_COFFEESCRIPT 	true 	Flag to enable or disable the linting process of the CoffeeScript language.
# VALIDATE_CSHARP 	true 	Flag to enable or disable the linting process of the C# language.
# VALIDATE_CSS 	true 	Flag to enable or disable the linting process of the CSS, Sass, and SCSS files.
# VALIDATE_CSS_PRETTIER 	true 	Flag to enable or disable checking the formatting of CSS, Sass, and SCSS files with Prettier.
# VALIDATE_DART 	true 	Flag to enable or disable the linting process of the Dart language.
# VALIDATE_DOCKERFILE_HADOLINT 	true 	Flag to enable or disable the linting process of the Docker language.
# VALIDATE_DOTNET_SLN_FORMAT_ANALYZERS 	true 	Option to enable or disable the linting process of Dotnet solutions.
# VALIDATE_DOTNET_SLN_FORMAT_STYLE 	true 	Option to enable or disable the linting process of Dotnet solutions.
# VALIDATE_DOTNET_SLN_FORMAT_WHITESPACE 	true 	Option to enable or disable the linting process of Dotnet solutions.
# VALIDATE_EDITORCONFIG 	true 	Flag to enable or disable the linting process with the EditorConfig.
# VALIDATE_ENV 	true 	Flag to enable or disable the linting process of the ENV language.
# VALIDATE_GHERKIN 	true 	Flag to enable or disable the linting process of the Gherkin language.
# VALIDATE_GIT_COMMITLINT 	true 	Option to enable or disable the linting process of Git commits with commitlint. commitlint needs a configuration file to work. Also, see the ENFORCE_COMMITLINT_CONFIGURATION_CHECK and the ENABLE_COMMITLINT_STRICT_MODE variables.
# VALIDATE_GIT_MERGE_CONFLICT_MARKERS 	true 	Option to enable or disable checking if files contain Git merge conflict markers.
# VALIDATE_GITHUB_ACTIONS 	true 	Flag to enable or disable the linting process of the GitHub Actions.
# VALIDATE_GITLEAKS 	true 	Flag to enable or disable the linting process of the secrets.
# VALIDATE_GO 	true 	Flag to enable or disable the linting process of the individual Golang files. Set this to false if you want to lint Go modules. See the VALIDATE_GO_MODULES variable.
# VALIDATE_GO_MODULES 	true 	Flag to enable or disable the linting process of Go modules. Super-linter considers a directory to be a Go module if it contains a file namedgo.mod.
# VALIDATE_GO_RELEASER 	true 	Flag to enable or disable the linting process of the GoReleaser config file.
# VALIDATE_GRAPHQL_PRETTIER 	true 	Flag to enable or disable checking the formatting of GraphQL files with Prettier.
# VALIDATE_GOOGLE_JAVA_FORMAT 	true 	Flag to enable or disable the linting process of the Java language. (Utilizing: google-java-format)
# VALIDATE_GROOVY 	true 	Flag to enable or disable the linting process of the language.
# VALIDATE_HTML 	true 	Flag to enable or disable the linting process of the HTML language.
# VALIDATE_HTML_PRETTIER 	true 	Flag to enable or disable checking the formatting of HTML files with Prettier.
# VALIDATE_JAVA 	true 	Flag to enable or disable the linting process of the Java language. (Utilizing: checkstyle)
# VALIDATE_JAVASCRIPT_ES 	true 	Flag to enable or disable the linting process of the JavaScript language. (Utilizing: ESLint)
# VALIDATE_JAVASCRIPT_PRETTIER 	true 	Flag to enable or disable checking the formatting of JavaScript files with Prettier.
# VALIDATE_JAVASCRIPT_STANDARD 	true 	Flag to enable or disable the linting process of the JavaScript language. (Utilizing: standard)
# VALIDATE_JSCPD 	true 	Flag to enable or disable JSCPD.
# VALIDATE_JSON 	true 	Flag to enable or disable the linting process of the JSON language.
# VALIDATE_JSON_PRETTIER 	true 	Flag to enable or disable checking the formatting of JSON files with Prettier.
# VALIDATE_JSONC 	true 	Flag to enable or disable the linting process of the JSONC and JSON5 languages.
# VALIDATE_JSONC_PRETTIER 	true 	Flag to enable or disable checking the formatting of JSONC and JSON5 files with Prettier.
# VALIDATE_JSX 	true 	Flag to enable or disable the linting process for jsx files (Utilizing: ESLint)
# VALIDATE_JSX_PRETTIER 	true 	Flag to enable or disable checking the formatting of JSX files with Prettier.
# VALIDATE_JUPYTER_NBQA_BLACK 	true 	Flag to enable or disable the linting process of Jupyter Notebooks. (Utilizing: nbqa black)
# VALIDATE_JUPYTER_NBQA_FLAKE8 	true 	Flag to enable or disable the linting process of Jupyter Notebooks. (Utilizing: nbqa flake8)
# VALIDATE_JUPYTER_NBQA_ISORT 	true 	Flag to enable or disable the linting process of Jupyter Notebooks. (Utilizing: nbqa isort)
# VALIDATE_JUPYTER_NBQA_MYPY 	true 	Flag to enable or disable the linting process of Jupyter Notebooks. (Utilizing: nbqa mypy)
# VALIDATE_JUPYTER_NBQA_PYLINT 	true 	Flag to enable or disable the linting process of Jupyter Notebooks. (Utilizing: nbqa pylint)
# VALIDATE_JUPYTER_NBQA_RUFF 	true 	Flag to enable or disable the linting process of Jupyter Notebooks. (Utilizing: nbqa ruff)
# VALIDATE_KOTLIN 	true 	Flag to enable or disable the linting process of the Kotlin language.
# VALIDATE_KUBERNETES_KUBECONFORM 	true 	Flag to enable or disable the linting process of Kubernetes descriptors with Kubeconform
# VALIDATE_LATEX 	true 	Flag to enable or disable the linting process of the LaTeX language.
# VALIDATE_LUA 	true 	Flag to enable or disable the linting process of the language.
# VALIDATE_MARKDOWN 	true 	Flag to enable or disable the linting process of the Markdown language.
# VALIDATE_MARKDOWN_PRETTIER 	true 	Flag to enable or disable checking the formatting of Markdown files with Prettier.
# VALIDATE_NATURAL_LANGUAGE 	true 	Flag to enable or disable the linting process of the natural language.
# VALIDATE_OPENAPI 	true 	Flag to enable or disable the linting process of the OpenAPI language.
# VALIDATE_PERL 	true 	Flag to enable or disable the linting process of the Perl language.
# VALIDATE_PHP 	true 	Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter) (keep for backward compatibility)
# VALIDATE_PHP_BUILTIN 	true 	Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP built-in linter)
# VALIDATE_PHP_PHPCS 	true 	Flag to enable or disable the linting process of the PHP language. (Utilizing: PHP CodeSniffer)
# VALIDATE_PHP_PHPSTAN 	true 	Flag to enable or disable the linting process of the PHP language. (Utilizing: PHPStan)
# VALIDATE_PHP_PSALM 	true 	Flag to enable or disable the linting process of the PHP language. (Utilizing: PSalm)
# VALIDATE_POWERSHELL 	true 	Flag to enable or disable the linting process of the Powershell language.
# VALIDATE_PROTOBUF 	true 	Flag to enable or disable the linting process of the Protobuf language.
# VALIDATE_PYTHON 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: pylint) (keep for backward compatibility)
# VALIDATE_PYTHON_BLACK 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: black)
# VALIDATE_PYTHON_FLAKE8 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: flake8)
# VALIDATE_PYTHON_ISORT 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: isort)
# VALIDATE_PYTHON_MYPY 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: mypy)
# VALIDATE_PYTHON_PYINK 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: pyink)
# VALIDATE_PYTHON_PYLINT 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: pylint)
# VALIDATE_PYTHON_RUFF 	true 	Flag to enable or disable the linting process of the Python language. (Utilizing: ruff)
# VALIDATE_R 	true 	Flag to enable or disable the linting process of the R language.
# VALIDATE_RAKU 	true 	Flag to enable or disable the linting process of the Raku language.
# VALIDATE_RENOVATE 	true 	Flag to enable or disable the linting process of the Renovate configuration files.
# VALIDATE_RUBY 	true 	Flag to enable or disable the linting process of the Ruby language.
# VALIDATE_RUST_2015 	true 	Flag to enable or disable the linting process of the Rust language. (edition: 2015)
# VALIDATE_RUST_2018 	true 	Flag to enable or disable the linting process of Rust language. (edition: 2018)
# VALIDATE_RUST_2021 	true 	Flag to enable or disable the linting process of Rust language. (edition: 2021)
# VALIDATE_RUST_CLIPPY 	true 	Flag to enable or disable the clippy linting process of Rust language.
# VALIDATE_SCALAFMT 	true 	Flag to enable or disable the linting process of Scala language. (Utilizing: scalafmt --test)
# VALIDATE_SHELL_SHFMT 	true 	Flag to enable or disable the linting process of Shell scripts. (Utilizing: shfmt)
# VALIDATE_SNAKEMAKE_LINT 	true 	Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakemake --lint)
# VALIDATE_SNAKEMAKE_SNAKEFMT 	true 	Flag to enable or disable the linting process of Snakefiles. (Utilizing: snakefmt)
# VALIDATE_STATES 	true 	Flag to enable or disable the linting process for AWS States Language.
# VALIDATE_SQLFLUFF 	true 	Flag to enable or disable the linting process of the SQL language. (Utilizing: sqlfuff)
# VALIDATE_TEKTON 	true 	Flag to enable or disable the linting process of the Tekton language.
# VALIDATE_TERRAFORM_FMT 	true 	Flag to enable or disable checking the formatting process of the Terraform files.
# VALIDATE_TERRAFORM_TERRASCAN 	true 	Flag to enable or disable the linting process of the Terraform language for security related issues.
# VALIDATE_TERRAFORM_TFLINT 	true 	Flag to enable or disable the linting process of the Terraform language. (Utilizing tflint)
# VALIDATE_TERRAGRUNT 	true 	Flag to enable or disable the linting process for Terragrunt files.
# VALIDATE_TSX 	true 	Flag to enable or disable the linting process for tsx files (Utilizing: ESLint)
# VALIDATE_TYPESCRIPT_ES 	true 	Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ESLint)
# VALIDATE_TYPESCRIPT_PRETTIER 	true 	Flag to enable or disable checking the formatting of TypeScript files with Prettier.
# VALIDATE_TYPESCRIPT_STANDARD 	true 	Flag to enable or disable the linting process of the TypeScript language. (Utilizing: ts-standard)
# VALIDATE_VUE_PRETTIER 	true 	Flag to enable or disable checking the formatting of Vue files with Prettier.
# VALIDATE_XML 	true 	Flag to enable or disable the linting process of the XML language.
# VALIDATE_YAML 	true 	Flag to enable or disable the linting process of the YAML language.
# VALIDATE_YAML_PRETTIER 	true 	Flag to enable or disable checking the formatting of YAML files with Prettier.
# YAML_CONFIG_FILE 	.yaml-lint.yml 	Filename for Yamllint configuration (ex:.yaml-lint.yml, .yamllint.yml)
# YAML_ERROR_ON_WARNING
